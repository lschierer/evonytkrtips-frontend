---
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
} from 'astro';
import type { ComponentProps } from 'astro/types';

import {General } from '@schemas/index';

import SkillBook from '@components/SkillBook.astro';
type SkillBook = ComponentProps<typeof SkillBook>;

import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';

const DEBUG = true;
import { Debug } from 'astro:components';

import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

export const getStaticPaths = (async () => {
  const generalEntries: CollectionEntry<'generals'>[] | undefined =
    await getCollection('generals');
  if(generalEntries) {
    return generalEntries.map((entry: CollectionEntry<'generals'>) => ({
      params: { id: entry.id },
      props: { entry },
    }));
  }
  else {
    if(DEBUG) console.log("No generalEntries returned from getCollection in getStaticPaths")
    throw new Error('No generals found.');
  }
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { id }: Params = Astro.params;
if (id === undefined) {
  if (DEBUG) console.log(`id was undefined`);
  throw new Error('Id is required');
}

const general: General = (Astro.props as Props).entry.data;

---
<StarlightPage
  frontmatter={{ title: `Details for ${id}`, tableOfContents: false }}
>
<h3 class="spectrum-Heading spectrum-Heading--sizeM">Base Stats:</h3>
<p class="spectrum-Body spectrum-Body--sizeM">
  <strong>Leadership: </strong> {general.leadership} (+{general.leadership_increment} per level)
</p>
<p class="spectrum-Body spectrum-Body--sizeM">
  <strong>Attack: </strong> {general.attack} (+{general.attack_increment} per level)
</p>
<p class="spectrum-Body spectrum-Body--sizeM">
  <strong>Defense: </strong> {general.defense} (+{general.defense_increment} per level)
</p>
<p class="spectrum-Body spectrum-Body--sizeM">
  <strong>Politics: </strong> {general.politics} (+{general.politics_increment} per level)
</p>

<h3 class="spectrum-Heading spectrum-Heading--sizeM">Special Skill:</h3>
<SkillBook name={general.builtInBook.name}></SkillBook>

  <Debug entry={general} />
  <slot />
</StarlightPage>
