---
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
} from 'astro';

import {generalObject } from '@schemas/index';

import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
 
const DEBUG = true;
import { Debug } from 'astro:components';

import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

export const getStaticPaths = (async () => {
  const generalEntries: CollectionEntry<'generals'>[] | undefined = await getCollection('generals');
  return generalEntries.map((entry: CollectionEntry<'generals'>) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { id }: Params = Astro.params;
if (id === undefined) {
  if (DEBUG) console.log(`id was undefined`);
  throw new Error('Id is required');
}

const general = (Astro.props as Props).entry.data;

---
<StarlightPage
  frontmatter={{ title: `Details for ${id}`, tableOfContents: false }}
>

  <Debug entry={general} />
  <slot />
</StarlightPage>
