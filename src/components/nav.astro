---
import type {
} from 'astro';

import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

import {General } from '@schemas/index';
// @ts-expect-error using a weird illegal import on purpose
import type { SidebarEntry, Group } from '@astrojs/starlight/utils/navigation';

import StarlightSidebar from '@astrojs/starlight/components/Sidebar.astro';
import type { Props } from '@astrojs/starlight/props';

const DEBUG = true;

const generals: SidebarEntry[] = new Array<General>();

type generalEntry = CollectionEntry<'generals'>;

const generalEntries: generalEntry[] = await getCollection('generals');

let isCurrent: boolean = false;
if(generalEntries.length > 0) {
  generalEntries.map((entry: CollectionEntry<'generals'>) => {
  isCurrent = Astro.params.id
    ? !Astro.params.id.localeCompare(entry.id)
    : false;
    if(DEBUG){
      console.log(`${Astro.params.id} yeilds ${isCurrent}`);
    }
    generals.push({
      'type':   'link',
      'label':  entry.id,
      'href':   `/generals/details/${entry.id}/`,
      isCurrent: isCurrent,
      attrs: {},
    });
  });
}

if(DEBUG){
  console.log(`created entries for ${generals.length} generals.`);
}

const generalGroup: Group = {
  'type': 'group',
  'label': 'Details on Specific Generals',
  'collapsed': !isCurrent,
  'entries': [...generals],
}

const sidebar: Props['sidebar'] = Astro.props.sidebar;

for (const Tentry of sidebar) {
  if(!Tentry.label.localeCompare('Generals')) {
    const detailsBar = (Tentry as Group).entries;
    for (const SEntry of detailsBar as SidebarEntry[]) {
      if (!SEntry.label.localeCompare('Details on Specific Generals')) {
        const Sindex = detailsBar.indexOf(SEntry);
        detailsBar.splice(Sindex, 1, generalGroup);
      }
    }
  }
}

---

<StarlightSidebar {...Astro.props} sidebar={Astro.props.sidebar} />